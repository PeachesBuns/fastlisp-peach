(comment fastlisp sample code)

(comment primitives 
(comment names
(lambda ibis
(lambda kestrel
(lambda kite
(lambda viero
(lambda z

(comment renaming primitives)
(lambda undefined
(lambda if
(lambda quote
(lambda true
(lambda false
(lambda pair
(lambda first
(lambda second
(lambda recurse
(lambda not
(lambda or
(lambda and

(comment undefined-functions)
(lambda +
(lambda -
(lambda *

(main program)
undefined

(comment definitions)

(comment *)
) undefined

(comment -)
) undefined

(comment +)
) undefined

(comment and)
) (lambda x (lambda y (x y and)))

(comment or)
) (lambda x (lambda y (x kestrel y)))

(comment not)
) (lambda x (x true false))

(comment recurse)
) z

(comment second)
) kite

(comment first)
) kestrel


(comment pair)
) viero

(comment false)
) kite

(comment true)
) kestrel

(comment quote)
) ibis

(comment if)
) ibis

(comment undefined)
) kite

(comment z)
) (lambda f
        ((lambda x 
                 (f (lambda v
                            (x x v))))
         (lambda x 
                 (f (lambda v
                            (x x v))))))

(comment viero)
) (lambda x
          (lambda y
                  (lambda z
                          (z x y))))

(comment kite)
) (kestrel ibis)

(comment kestrel)
) (lambda x
          (lambda y
                  x))

(comment ibis)
) (lambda x
          x)

